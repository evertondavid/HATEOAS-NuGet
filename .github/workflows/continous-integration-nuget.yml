name: .NET 8 Continuous Integration with GitHub, GitHub Actions and Nuget Packages

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_PATH: HATEOAS  # Definindo o caminho do projeto como uma vari√°vel de ambiente

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: List directories and files
      run: ls -la

    - name: Restore dependencies
      run: |
        cd ${{ env.PROJECT_PATH }}
        dotnet restore HATEOAS.csproj

    - name: Build
      run: |
        cd ${{ env.PROJECT_PATH }}
        dotnet build --no-restore HATEOAS.csproj

    - name: Change .csproj version
      run: |
        cd ${{ env.PROJECT_PATH }}
        PROJECT_FILE=HATEOAS.csproj
        CURRENT_VERSION=$(grep -oP '<Version>\K[^<]+' $PROJECT_FILE)
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF+=1; OFS="."; print $0}')
        NEW_VERSION=$(echo $NEW_VERSION | tr ' ' '.')
        sed -i "s|<Version>$CURRENT_VERSION</Version>|<Version>$NEW_VERSION</Version>|" $PROJECT_FILE
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Increment version to $NEW_VERSION" -a
        git push

    - name: Generate Release
      run: |
        cd ${{ env.PROJECT_PATH }}
        dotnet build -c release HATEOAS.csproj

    - name: Generate Nuget Package
      run: |
        cd ${{ env.PROJECT_PATH }}
        dotnet pack -c release -o ./dist/ HATEOAS.csproj

    - name: Push Nuget Package
      run: |
        cd ${{ env.PROJECT_PATH }}
        dotnet nuget push "./dist/*" -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
